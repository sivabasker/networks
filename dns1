///////////////////////////////server/////////////////////////////
#include<stdio.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<arpa/inet.h>
#include<netinet/in.h>
main()
{
    struct sockaddr_in server,client;
    int s,n;
    char b1[100],b2[100];
    s=socket(AF_INET,SOCK_DGRAM,0);
    server.sin_family=AF_INET;
    server.sin_port=3000;
    server.sin_addr.s_addr=inet_addr("127.0.0.1");
    n=sizeof(server);
    printf("\nEnter canonical address: ");
    scanf("%s",b2);
    sendto(s,b2,sizeof(b2),0,(struct sockaddr *)&server,n);
    recvfrom(s,b1,sizeof(b1), 0,NULL,NULL);
    printf("%s \n",b1);
}


/////////////////////////////////client/////////////////////////////////

// Server Program : dnss.c

#include<stdio.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>
main()
{
    FILE *fp;
    struct sockaddr_in server,client;
    int s,n;
    char b1[100],b2[100],a[100];
    s=socket(AF_INET,SOCK_DGRAM,0);
    server.sin_family=AF_INET;
    server.sin_port=3000;
    server.sin_addr.s_addr=inet_addr("127.0.0.1");
    bind(s,(struct sockaddr *)&server,sizeof(server));
    n=sizeof(client);
    while(1)
    {
        strcpy(b2,"");
        fp=fopen("dns.txt","r");
        recvfrom(s,b1,sizeof b1, 0,(struct sockaddr *)&client,&n);
        while(!feof(fp))
       {
           fscanf(fp,"%s",a);
           if(strcmp(a,b1)==0)
          {
                fscanf(fp,"%s",b2);
                break;
          }
      }
      if(strcmp(b2,"")==0)
     {
           strcpy(b2,"Not found...");
      }
     fclose(fp);
     sendto(s,b2,sizeof b2,0,(struct sockaddr *)&client,n);  
    }
}

////////////////////////////////////dns//////////////////////////////////

    #include<stdio.h>
    #include<stdlib.h>
    #include<errno.h>
    #include<netdb.h>
    #include<sys/types.h>
    #include<sys/socket.h>
    #include<netinet/in.h>int main(int argc,char *argv[1])
    {
    struct hostent *hen;if(argc!=2)
    {
    fprintf(stderr,"Enter the hostname \n");exit(1);
    }
    hen=gethostbyname(argv[1]);
    if(hen==NULL){fprintf(stderr,"Host not found \n");
    }
    printf("Hostname is %s \n",hen->h_name);
    printf("IP address is %s \n",inet_ntoa(*((struct in_addr *)hen->h_addr)));
    }
